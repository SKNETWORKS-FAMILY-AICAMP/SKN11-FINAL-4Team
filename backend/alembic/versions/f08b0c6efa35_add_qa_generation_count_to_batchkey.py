"""Add QA generation count to BatchKey

Revision ID: f08b0c6efa35
Revises: 74e1f866a4cb
Create Date: 2025-07-03 09:28:42.160041

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'f08b0c6efa35'
down_revision = '74e1f866a4cb'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('AI_INFLUENCER', 'instagram_profile_picture_url')
    op.drop_column('AI_INFLUENCER', 'instagram_followers_count')
    op.add_column('BATCH_KEY', sa.Column('task_id', sa.String(length=255), nullable=True, comment='QA 생성 작업 ID'))
    op.add_column('BATCH_KEY', sa.Column('openai_batch_id', sa.String(length=255), nullable=True, comment='OpenAI 배치 ID'))
    op.add_column('BATCH_KEY', sa.Column('status', sa.String(length=50), nullable=True, comment='배치 상태'))
    op.add_column('BATCH_KEY', sa.Column('total_qa_pairs', sa.Integer(), nullable=True, comment='총 QA 쌍 수'))
    op.add_column('BATCH_KEY', sa.Column('generated_qa_pairs', sa.Integer(), nullable=True, comment='생성된 QA 쌍 수'))
    op.add_column('BATCH_KEY', sa.Column('input_file_id', sa.String(length=255), nullable=True, comment='입력 파일 ID'))
    op.add_column('BATCH_KEY', sa.Column('output_file_id', sa.String(length=255), nullable=True, comment='출력 파일 ID'))
    op.add_column('BATCH_KEY', sa.Column('error_message', sa.Text(), nullable=True, comment='오류 메시지'))
    op.add_column('BATCH_KEY', sa.Column('s3_qa_file_url', sa.String(length=500), nullable=True, comment='S3 QA 파일 URL'))
    op.add_column('BATCH_KEY', sa.Column('s3_processed_file_url', sa.String(length=500), nullable=True, comment='S3 처리된 파일 URL'))
    op.add_column('BATCH_KEY', sa.Column('is_processed', sa.Boolean(), nullable=True, comment='결과 처리 완료 여부'))
    op.add_column('BATCH_KEY', sa.Column('is_uploaded_to_s3', sa.Boolean(), nullable=True, comment='S3 업로드 완료 여부'))
    op.add_column('BATCH_KEY', sa.Column('is_finetuning_started', sa.Boolean(), nullable=True, comment='파인튜닝 시작 여부'))
    op.add_column('BATCH_KEY', sa.Column('created_at', sa.DateTime(), nullable=True, comment='생성 시간'))
    op.add_column('BATCH_KEY', sa.Column('updated_at', sa.DateTime(), nullable=True, comment='수정 시간'))
    op.add_column('BATCH_KEY', sa.Column('completed_at', sa.DateTime(), nullable=True, comment='완료 시간'))
    op.create_index(op.f('ix_BATCH_KEY_openai_batch_id'), 'BATCH_KEY', ['openai_batch_id'], unique=True)
    op.create_index(op.f('ix_BATCH_KEY_task_id'), 'BATCH_KEY', ['task_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_BATCH_KEY_task_id'), table_name='BATCH_KEY')
    op.drop_index(op.f('ix_BATCH_KEY_openai_batch_id'), table_name='BATCH_KEY')
    op.drop_column('BATCH_KEY', 'completed_at')
    op.drop_column('BATCH_KEY', 'updated_at')
    op.drop_column('BATCH_KEY', 'created_at')
    op.drop_column('BATCH_KEY', 'is_finetuning_started')
    op.drop_column('BATCH_KEY', 'is_uploaded_to_s3')
    op.drop_column('BATCH_KEY', 'is_processed')
    op.drop_column('BATCH_KEY', 's3_processed_file_url')
    op.drop_column('BATCH_KEY', 's3_qa_file_url')
    op.drop_column('BATCH_KEY', 'error_message')
    op.drop_column('BATCH_KEY', 'output_file_id')
    op.drop_column('BATCH_KEY', 'input_file_id')
    op.drop_column('BATCH_KEY', 'generated_qa_pairs')
    op.drop_column('BATCH_KEY', 'total_qa_pairs')
    op.drop_column('BATCH_KEY', 'status')
    op.drop_column('BATCH_KEY', 'openai_batch_id')
    op.drop_column('BATCH_KEY', 'task_id')
    op.add_column('AI_INFLUENCER', sa.Column('instagram_followers_count', mysql.INTEGER(), autoincrement=False, nullable=True, comment='인스타그램 팔로워 수'))
    op.add_column('AI_INFLUENCER', sa.Column('instagram_profile_picture_url', mysql.TEXT(), nullable=True, comment='인스타그램 프로필 사진 URL'))
    # ### end Alembic commands ###
