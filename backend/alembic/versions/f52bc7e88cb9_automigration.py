"""AutoMigration

Revision ID: f52bc7e88cb9
Revises: 001
Create Date: 2025-06-26 10:16:05.694956

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "f52bc7e88cb9"
down_revision = "001"
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "GROUP",
        sa.Column("group_uuid", sa.String(length=36), nullable=False),
        sa.Column(
            "group_name", sa.String(length=100), nullable=False, comment="그룹 이름"
        ),
        sa.Column("group_description", sa.Text(), nullable=True, comment="그룹 설명"),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="그룹 생성일시",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="그룹 수정일시",
        ),
        sa.PrimaryKeyConstraint("group_uuid"),
    )
    op.create_table(
        "MODEL_MBTI",
        sa.Column("mbti_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("mbti_name", sa.String(length=100), nullable=False),
        sa.Column("mbti_chara", sa.String(length=255), nullable=False),
        sa.Column("mbti_speaks", sa.Text(), nullable=False),
        sa.Column("mbti_data_url", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("mbti_id"),
    )
    op.create_table(
        "USER",
        sa.Column("user_uuid", sa.String(length=36), nullable=False),
        sa.Column(
            "provider_id",
            sa.String(length=20),
            nullable=False,
            comment="소셜 로그인 제공자별 사용자 ID",
        ),
        sa.Column(
            "provider",
            sa.String(length=20),
            nullable=False,
            comment="소셜 로그인 제공자 구분",
        ),
        sa.Column(
            "user_name", sa.String(length=20), nullable=False, comment="사용자 이름"
        ),
        sa.Column(
            "email", sa.String(length=50), nullable=False, comment="사용자 이메일"
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="사용자 등록일시",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="사용자 정보 수정일시",
        ),
        sa.PrimaryKeyConstraint("user_uuid"),
    )
    op.create_table(
        "HF_TOKEN_MANAGE",
        sa.Column("hf_manage_uuid", sa.String(length=36), nullable=False),
        sa.Column("group_uuid", sa.String(length=36), nullable=False),
        sa.Column(
            "hf_token_value", sa.Text(), nullable=False, comment="허깅페이스 토큰 값"
        ),
        sa.Column(
            "hf_token_nickname",
            sa.String(length=100),
            nullable=False,
            comment="허깅페이스 토큰 별칭",
        ),
        sa.Column(
            "hf_user_name",
            sa.String(length=50),
            nullable=False,
            comment="허깅페이스 사용자명",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="토큰 생성일시",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="토큰 수정일시",
        ),
        sa.ForeignKeyConstraint(
            ["group_uuid"],
            ["GROUP.group_uuid"],
        ),
        sa.PrimaryKeyConstraint("hf_manage_uuid"),
    )
    op.create_table(
        "ML",
        sa.Column("model_uuid", sa.String(length=36), nullable=False),
        sa.Column("group_uuid", sa.String(length=36), nullable=False),
        sa.Column("mbti_id", sa.Integer(), nullable=False),
        sa.Column("model_name", sa.String(length=100), nullable=False),
        sa.Column("model_description", sa.Text(), nullable=True),
        sa.Column("model_personality", sa.String(length=50), nullable=False),
        sa.Column("model_speaks", sa.String(length=50), nullable=False),
        sa.Column("model_repo", sa.String(length=255), nullable=False),
        sa.Column("image_url", sa.String(length=255), nullable=True),
        sa.Column("model_status", sa.Integer(), nullable=False),
        sa.Column("model_data_url", sa.String(length=255), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["group_uuid"],
            ["GROUP.group_uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["mbti_id"],
            ["MODEL_MBTI.mbti_id"],
        ),
        sa.PrimaryKeyConstraint("model_uuid"),
        sa.UniqueConstraint("model_name"),
    )
    op.create_table(
        "SYSTEM_LOG",
        sa.Column("log_uuid", sa.String(length=36), nullable=False),
        sa.Column("user_uuid", sa.String(length=36), nullable=False),
        sa.Column("log_type", sa.Integer(), nullable=False, comment="로그 유형"),
        sa.Column("log_content", sa.JSON(), nullable=False, comment="로그 내용"),
        sa.Column(
            "created_date",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="로그 생성일시",
        ),
        sa.ForeignKeyConstraint(
            ["user_uuid"],
            ["USER.user_uuid"],
        ),
        sa.PrimaryKeyConstraint("log_uuid"),
    )
    op.create_table(
        "USER_GROUP",
        sa.Column("user_uuid", sa.String(length=36), nullable=False),
        sa.Column("group_uuid", sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_uuid"],
            ["GROUP.group_uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["user_uuid"],
            ["USER.user_uuid"],
        ),
        sa.PrimaryKeyConstraint("user_uuid", "group_uuid"),
    )
    op.create_table(
        "BOARD",
        sa.Column("board_uuid", sa.String(length=36), nullable=False),
        sa.Column("group_uuid", sa.String(length=36), nullable=False),
        sa.Column("model_uuid", sa.String(length=36), nullable=False),
        sa.Column("board_topic", sa.String(length=100), nullable=False),
        sa.Column("board_description", sa.Text(), nullable=True),
        sa.Column("board_platform", sa.Integer(), nullable=False),
        sa.Column("board_hash_tag", sa.JSON(), nullable=True),
        sa.Column("reservation_at", sa.DateTime(), nullable=True),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column(
            "updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("board_status", sa.Integer(), nullable=False),
        sa.Column("pulished_at", sa.DateTime(), nullable=True),
        sa.Column("image_url", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["group_uuid"],
            ["GROUP.group_uuid"],
        ),
        sa.ForeignKeyConstraint(["model_uuid"], ["ML.model_uuid"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("board_uuid"),
    )
    op.create_table(
        "ML_API",
        sa.Column("api_uuid", sa.String(length=36), nullable=False),
        sa.Column("model_uuid", sa.String(length=36), nullable=False),
        sa.Column("group_uuid", sa.String(length=36), nullable=False),
        sa.Column(
            "api_value", sa.String(length=255), nullable=False, comment="API 키 값"
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="API 생성일",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="API 수정일",
        ),
        sa.ForeignKeyConstraint(
            ["group_uuid"],
            ["GROUP.group_uuid"],
        ),
        sa.ForeignKeyConstraint(["model_uuid"], ["ML.model_uuid"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("api_uuid"),
    )
    op.create_table(
        "API_CALL_AGGREGATION",
        sa.Column("api_call_uuid", sa.String(length=36), nullable=False),
        sa.Column("api_uuid", sa.String(length=36), nullable=False),
        sa.Column("model_uuid", sa.String(length=36), nullable=False),
        sa.Column("group_uuid", sa.String(length=36), nullable=False),
        sa.Column(
            "daily_call_count",
            sa.Integer(),
            nullable=False,
            comment="일일 API 호출 횟수",
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="집계 데이터 생성일",
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("now()"),
            nullable=False,
            comment="집계 데이터 수정일",
        ),
        sa.ForeignKeyConstraint(
            ["api_uuid"],
            ["ML_API.api_uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["group_uuid"],
            ["GROUP.group_uuid"],
        ),
        sa.ForeignKeyConstraint(
            ["model_uuid"],
            ["ML.model_uuid"],
        ),
        sa.PrimaryKeyConstraint("api_call_uuid"),
    )
    op.drop_table("group")
    op.drop_index("model_name", table_name="ml")
    op.drop_table("ml")
    op.drop_table("board")
    op.drop_table("user_group")
    op.drop_table("model_mbti")
    op.drop_table("hf_token_manage")
    op.drop_table("user")
    op.drop_table("ml_api")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "ml_api",
        sa.Column(
            "api_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=False,
        ),
        sa.Column(
            "model_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=False,
        ),
        sa.Column(
            "group_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=False,
        ),
        sa.Column(
            "api_value",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=255),
            nullable=False,
        ),
        sa.Column("created_at", mysql.DATETIME(), nullable=False),
        sa.Column("updated_at", mysql.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_uuid"],
            ["group.group_uuid"],
            name="ml_api_ibfk_1",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["model_uuid"],
            ["ml.model_uuid"],
            name="ml_api_ibfk_2",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("api_uuid"),
        mysql_collate="utf8mb4_unicode_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "user",
        sa.Column(
            "user_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=False,
        ),
        sa.Column(
            "provider_id",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=20),
            nullable=False,
        ),
        sa.Column(
            "provider",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=20),
            nullable=False,
        ),
        sa.Column(
            "user_name",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=20),
            nullable=False,
        ),
        sa.Column(
            "email",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=50),
            nullable=False,
        ),
        sa.Column("created_at", mysql.DATETIME(), nullable=False),
        sa.Column("updated_at", mysql.DATETIME(), nullable=False),
        sa.PrimaryKeyConstraint("user_uuid"),
        mysql_collate="utf8mb4_unicode_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "hf_token_manage",
        sa.Column(
            "hf_manage_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=False,
        ),
        sa.Column(
            "group_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=True,
        ),
        sa.Column(
            "hf_token_value", mysql.TEXT(collation="utf8mb4_unicode_ci"), nullable=False
        ),
        sa.Column(
            "hf_token_nickname",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=100),
            nullable=False,
        ),
        sa.Column(
            "hf_user_name",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=50),
            nullable=False,
        ),
        sa.Column("created_at", mysql.DATETIME(), nullable=False),
        sa.Column("updated_at", mysql.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_uuid"],
            ["group.group_uuid"],
            name="hf_token_manage_ibfk_1",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("hf_manage_uuid"),
        mysql_collate="utf8mb4_unicode_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "model_mbti",
        sa.Column("mbti_id", mysql.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "mbti_name",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=100),
            nullable=False,
        ),
        sa.Column(
            "mbti_chara",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=255),
            nullable=False,
        ),
        sa.Column(
            "mbti_speaks", mysql.TEXT(collation="utf8mb4_unicode_ci"), nullable=False
        ),
        sa.Column(
            "mbti_data_url",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=255),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("mbti_id"),
        mysql_collate="utf8mb4_unicode_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "user_group",
        sa.Column(
            "user_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=False,
        ),
        sa.Column(
            "group_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["group_uuid"],
            ["group.group_uuid"],
            name="user_group_ibfk_1",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_uuid"],
            ["user.user_uuid"],
            name="user_group_ibfk_2",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("user_uuid", "group_uuid"),
        mysql_collate="utf8mb4_unicode_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "board",
        sa.Column(
            "board_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=False,
        ),
        sa.Column(
            "group_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=False,
        ),
        sa.Column(
            "model_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=False,
        ),
        sa.Column(
            "board_topic",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=100),
            nullable=False,
        ),
        sa.Column(
            "board_description",
            mysql.TEXT(collation="utf8mb4_unicode_ci"),
            nullable=True,
        ),
        sa.Column(
            "board_platform", mysql.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("board_hash_tag", mysql.JSON(), nullable=True),
        sa.Column("reservation_at", mysql.DATETIME(), nullable=True),
        sa.Column("created_at", mysql.DATETIME(), nullable=False),
        sa.Column("updated_at", mysql.DATETIME(), nullable=False),
        sa.Column("board_status", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("pulished_at", mysql.DATETIME(), nullable=True),
        sa.Column("image_url", mysql.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["group_uuid"],
            ["group.group_uuid"],
            name="board_ibfk_1",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["model_uuid"],
            ["ml.model_uuid"],
            name="board_ibfk_2",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("board_uuid"),
        mysql_collate="utf8mb4_unicode_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_table(
        "ml",
        sa.Column(
            "model_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=False,
        ),
        sa.Column(
            "group_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=False,
        ),
        sa.Column("mbti_id", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "model_name",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=100),
            nullable=False,
        ),
        sa.Column(
            "model_description",
            mysql.TEXT(collation="utf8mb4_unicode_ci"),
            nullable=True,
        ),
        sa.Column(
            "model_personality",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=50),
            nullable=False,
        ),
        sa.Column(
            "model_speaks",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=50),
            nullable=False,
        ),
        sa.Column(
            "model_repo",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=255),
            nullable=False,
        ),
        sa.Column(
            "image_url",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=255),
            nullable=True,
        ),
        sa.Column("model_status", mysql.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "model_data_url",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=255),
            nullable=True,
        ),
        sa.Column("created_at", mysql.DATETIME(), nullable=False),
        sa.Column("updated_at", mysql.DATETIME(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_uuid"],
            ["group.group_uuid"],
            name="ml_ibfk_1",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["mbti_id"],
            ["model_mbti.mbti_id"],
            name="ml_ibfk_2",
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("model_uuid"),
        mysql_collate="utf8mb4_unicode_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.create_index("model_name", "ml", ["model_name"], unique=False)
    op.create_table(
        "group",
        sa.Column(
            "group_uuid",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=36),
            nullable=False,
        ),
        sa.Column(
            "group_name",
            mysql.VARCHAR(collation="utf8mb4_unicode_ci", length=100),
            nullable=False,
        ),
        sa.Column(
            "group_description",
            mysql.TEXT(collation="utf8mb4_unicode_ci"),
            nullable=True,
        ),
        sa.Column("created_at", mysql.DATETIME(), nullable=False),
        sa.Column("updated_at", mysql.DATETIME(), nullable=False),
        sa.PrimaryKeyConstraint("group_uuid"),
        mysql_collate="utf8mb4_unicode_ci",
        mysql_default_charset="utf8mb4",
        mysql_engine="InnoDB",
    )
    op.drop_table("API_CALL_AGGREGATION")
    op.drop_table("ML_API")
    op.drop_table("BOARD")
    op.drop_table("USER_GROUP")
    op.drop_table("SYSTEM_LOG")
    op.drop_table("ML")
    op.drop_table("HF_TOKEN_MANAGE")
    op.drop_table("USER")
    op.drop_table("MODEL_MBTI")
    op.drop_table("GROUP")
    # ### end Alembic commands ###
