"""Initial migration

Revision ID: 001
Revises:
Create Date: 2025-01-27 10:00:00.000000

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "001"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # USER 테이블 생성
    op.create_table(
        "USER",
        sa.Column("user_uuid", sa.String(length=36), nullable=False),
        sa.Column("provider_id", sa.String(length=20), nullable=False),
        sa.Column("provider", sa.String(length=20), nullable=False),
        sa.Column("user_name", sa.String(length=20), nullable=False),
        sa.Column("email", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("user_uuid"),
    )

    # GROUP 테이블 생성
    op.create_table(
        "GROUP",
        sa.Column("group_uuid", sa.String(length=36), nullable=False),
        sa.Column("group_name", sa.String(length=100), nullable=False),
        sa.Column("group_description", sa.Text(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("group_uuid"),
    )

    # MODEL_MBTI 테이블 생성
    op.create_table(
        "MODEL_MBTI",
        sa.Column("mbti_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("mbti_name", sa.String(length=100), nullable=False),
        sa.Column("mbti_chara", sa.String(length=255), nullable=False),
        sa.Column("mbti_speaks", sa.Text(), nullable=False),
        sa.Column("mbti_data_url", sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint("mbti_id"),
    )

    # ML 테이블 생성
    op.create_table(
        "ML",
        sa.Column("model_uuid", sa.String(length=36), nullable=False),
        sa.Column("group_uuid", sa.String(length=36), nullable=False),
        sa.Column("mbti_id", sa.Integer(), nullable=False),
        sa.Column("model_name", sa.String(length=100), nullable=False),
        sa.Column("model_description", sa.Text(), nullable=True),
        sa.Column("model_personality", sa.String(length=50), nullable=False),
        sa.Column("model_speaks", sa.String(length=50), nullable=False),
        sa.Column("model_repo", sa.String(length=255), nullable=False),
        sa.Column("image_url", sa.String(length=255), nullable=True),
        sa.Column("model_status", sa.Integer(), nullable=False),
        sa.Column("model_data_url", sa.String(length=255), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_uuid"], ["GROUP.group_uuid"], ondelete="CASCADE", onupdate="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["mbti_id"], ["MODEL_MBTI.mbti_id"], ondelete="CASCADE", onupdate="CASCADE"
        ),
        sa.PrimaryKeyConstraint("model_uuid"),
        sa.UniqueConstraint("model_name"),
    )

    # BOARD 테이블 생성
    op.create_table(
        "BOARD",
        sa.Column("board_uuid", sa.String(length=36), nullable=False),
        sa.Column("group_uuid", sa.String(length=36), nullable=False),
        sa.Column("model_uuid", sa.String(length=36), nullable=False),
        sa.Column("board_topic", sa.String(length=100), nullable=False),
        sa.Column("board_description", sa.Text(), nullable=True),
        sa.Column("board_platform", sa.Integer(), nullable=False),
        sa.Column("board_hash_tag", sa.JSON(), nullable=True),
        sa.Column("reservation_at", sa.DateTime(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("board_status", sa.Integer(), nullable=False),
        sa.Column("pulished_at", sa.DateTime(), nullable=True),
        sa.Column("image_url", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["group_uuid"], ["GROUP.group_uuid"], ondelete="CASCADE", onupdate="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["model_uuid"], ["ML.model_uuid"], ondelete="CASCADE", onupdate="CASCADE"
        ),
        sa.PrimaryKeyConstraint("board_uuid"),
    )

    # ML_API 테이블 생성
    op.create_table(
        "ML_API",
        sa.Column("api_uuid", sa.String(length=36), nullable=False),
        sa.Column("model_uuid", sa.String(length=36), nullable=False),
        sa.Column("group_uuid", sa.String(length=36), nullable=False),
        sa.Column("api_value", sa.String(length=255), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_uuid"], ["GROUP.group_uuid"], ondelete="CASCADE", onupdate="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["model_uuid"], ["ML.model_uuid"], ondelete="CASCADE", onupdate="CASCADE"
        ),
        sa.PrimaryKeyConstraint("api_uuid"),
    )

    # HF_TOKEN_MANAGE 테이블 생성
    op.create_table(
        "HF_TOKEN_MANAGE",
        sa.Column("hf_manage_uuid", sa.String(length=36), nullable=False),
        sa.Column("group_uuid", sa.String(length=36), nullable=True),
        sa.Column("hf_token_value", sa.Text(), nullable=False),
        sa.Column("hf_token_nickname", sa.String(length=100), nullable=False),
        sa.Column("hf_user_name", sa.String(length=50), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_uuid"], ["GROUP.group_uuid"], ondelete="CASCADE", onupdate="CASCADE"
        ),
        sa.PrimaryKeyConstraint("hf_manage_uuid"),
    )

    # USER_GROUP 테이블 생성
    op.create_table(
        "USER_GROUP",
        sa.Column("user_uuid", sa.String(length=36), nullable=False),
        sa.Column("group_uuid", sa.String(length=36), nullable=False),
        sa.ForeignKeyConstraint(
            ["group_uuid"], ["GROUP.group_uuid"], ondelete="CASCADE", onupdate="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["user_uuid"], ["USER.user_uuid"], ondelete="CASCADE", onupdate="CASCADE"
        ),
        sa.PrimaryKeyConstraint("user_uuid", "group_uuid"),
    )

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("USER_GROUP")
    op.drop_table("HF_TOKEN_MANAGE")
    op.drop_table("ML_API")
    op.drop_table("BOARD")
    op.drop_table("ML")
    op.drop_table("MODEL_MBTI")
    op.drop_table("GROUP")
    op.drop_table("USER")
    # ### end Alembic commands ###
