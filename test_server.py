#!/usr/bin/env python3\n\"\"\"\nAIMEX 백엔드 서버 테스트 스크립트\n간단한 서버 실행 테스트를 위한 스크립트\n\nSOLID 원칙:\n- SRP: 서버 실행 테스트만 담당\n- DIP: 구체적인 구현보다는 추상적인 테스트에 의존\n\"\"\"\n\nimport sys\nimport os\n\n# 백엔드 경로 추가\nsys.path.append(os.path.join(os.path.dirname(__file__), 'backend'))\n\ntry:\n    print(\"🔍 1. 기본 패키지 임포트 테스트...\")\n    import fastapi\n    import uvicorn\n    import sqlalchemy\n    print(\"✅ 기본 패키지 임포트 성공\")\n    \n    print(\"\\n🔍 2. 환경 설정 로드 테스트...\")\n    from app.core.config import settings\n    print(f\"✅ 환경 설정 로드 성공 - PROJECT_NAME: {settings.PROJECT_NAME}\")\n    print(f\"   - DATABASE_URL: {settings.DATABASE_URL[:30]}...\")\n    print(f\"   - DEBUG: {settings.DEBUG}\")\n    \n    print(\"\\n🔍 3. 애플리케이션 임포트 테스트...\")\n    from app.main import app\n    print(\"✅ FastAPI 애플리케이션 임포트 성공\")\n    \n    print(\"\\n🔍 4. 데이터베이스 연결 테스트...\")\n    from app.database import test_database_connection\n    db_connected = test_database_connection()\n    if db_connected:\n        print(\"✅ 데이터베이스 연결 성공\")\n    else:\n        print(\"❌ 데이터베이스 연결 실패\")\n        print(\"   데이터베이스가 실행 중인지 확인하세요.\")\n    \n    print(\"\\n🔍 5. 모델 임포트 테스트...\")\n    from app.models import User, Team, AIInfluencer, ModelMBTI, StylePreset\n    print(\"✅ 모델 임포트 성공\")\n    \n    print(\"\\n🎉 모든 기본 테스트 통과!\")\n    print(\"\\n🚀 서버 실행을 위해 다음 명령어를 사용하세요:\")\n    print(\"   cd backend && python run.py\")\n    \nexcept ImportError as e:\n    print(f\"❌ 임포트 오류: {e}\")\n    print(\"   의존성 패키지를 설치하세요: pip install -r backend/requirements.txt\")\nexcept Exception as e:\n    print(f\"❌ 오류 발생: {e}\")\n    print(f\"   오류 타입: {type(e).__name__}\")\n    import traceback\n    print(f\"   상세 정보: {traceback.format_exc()}\")\n